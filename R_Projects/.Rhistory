install.packages("dplyr")
install.packages("rlang")
install.packages("dplyr")
install.packages(c("lifecycle", "pillar", "tidyselect"))
library(dplyr)
install.packages("dplyr")
install.packages("rlang")
library(dplyr)
install.packages("assertthat")
install.packages("~/CS Courses/Data Science/dplyr_1.0.10.tar.gz", repos = NULL, type = "source")
library(dplyr)
# working with data
# set the working directory
setwd("C:/Users/sseyl/OneDrive/Documents/GitHub/Data-Science-Projects/R_Projects")
# read a tab-delimited data file
cars <- read.table(
file = "Cars.txt",
header = TRUE,
sep = "\t",
quote="\"")
# peek at the data
head(cars)
# install.packages("dplyr")
# load the dplyr library
library(dplyr)
# Select a subset of columns
temp <- select(
.data = cars,
Transmission,
Cylinders,
Fuel.Economy)
setwd("C:/Users/sseyl/OneDrive/Documents/GitHub/Data-Science-Projects/R_Projects")
# read a tab-delimited data file
cars <- read.table(
file = "Cars.txt",
header = TRUE,
sep = "\t",
quote="\"")
# peek at the data
head(cars)
# install.packages("dplyr")
# load the dplyr library
library(dplyr)
# Select a subset of columns
temp <- select(
.data = cars,
Transmission,
Cylinders,
Fuel.Economy)
head(temp)
# Filter a subset of rows
temp <- filter(filter(
.data = temp,
Transmission == "Automatic"
))
# Filter a subset of rows
temp <- filter(
.data = temp,
Transmission == "Automatic")
head(temp)
temp <- mutate(
.data = temp,
Consumption = Fuel.Economy * 0.425)
# insepct
head(temp)
temp <- group_by(
.data = temp,
Cylinders)
head(temp)
# aggregate based on groups
temp <- summarize(
.data = temp,
Avg.Consumption = mean(Consumption))
# inspect the results
head(temp)
# arrange the rows in descending order
temp <- arrange(
.data = temp,
desc(Avg.Consumption))
head(temp)
# convert to data frame
efficiency <- as.data.frame(temp)
head(efficiency)
# chain methods together
efficiency <- cars %>%
select(Fuel.Economy, Cylinders, Transmission) %>%
filter(Transmission == "Automatic") %>%
# chain methods together, method chanining/piping
efficiency <- cars %>%
select(Fuel.Economy, Cylinders, Transmission) %>%
filter(Transmission == "Automatic") %>%
# chain methods together, "method chanining" or "piping"
efficiency <- cars %>%
select(Fuel.Economy, Cylinders, Transmission) %>%
filter(Transmission == "Automatic") %>%
mutate(Consumption =  Fuel.Economy * 0.425) %>%
group_by(Cylinders) %>%
summarize(Avg.Consumption = mean(Consumption)) %>%
arrange(des(Avg.Consumption)) %>%
as.data.frame()
#inspect the results
print(efficiency)
# save the results to a CSV file
write.csv(
x = efficiency,
file = "Fuel Efficiency.csv",
row.names = FALSE)
# set the working directory
setwd("C:/Users/sseyl/OneDrive/Documents/GitHub/Data-Science-Projects/R_Projects") # use / instead of \ for directory
# read in a CSV data file
cars <- read.csv("Cars.csv")
# peek at the data
head(cars)
table(cars$Transmission) # use categorical data in Transmission column
# get the minimum value of Fuel Economy column
min(cars$Fuel.Economy)
# get the maxium value of Fuel Economy column
max(cars$Fuel.Economy)
# get the average value of Fuel Economy column
mean(cars$Fuel.Economy)
# get the median value of Fuel Economy column
median(cars$Fuel.Economy)
# Get the Quartiles
quantile(cars$Fuel.Economy)
# get the standard deviation
sd(cars$Fuel.Economy)
sum(cars$Fuel.Economy)
# get the correlation coefficient between Cylinders and Fuel Economy
cor(
x = cars$Cylinders,
y = cars$Fuel.Economy)
summary(cars)
# set the working directory
setwd("C:/Users/sseyl/OneDrive/Documents/GitHub/Data-Science-Projects/R_Projects") # use / instead of \ for directory
# read in a CSV data file
cars <- read.csv("Cars.csv")
setwd("C:/Users/sseyl/OneDrive/Documents/GitHub/Data-Science-Projects/R_Projects") # use / instead of \ for directory
cars <- read.csv("Cars.csv")
# set the working directory
setwd("C:/Users/sseyl/OneDrive/Documents/GitHub/Data-Science-Projects/R_Projects") # use / instead of \ for directory
# read in a CSV data file
cars <- read.csv("Cars.csv")
# peek at the data
head(cars)
# create a frequency table
table(cars$Transmission) # use categorical data in Transmission column to find # of cars of each type
# get the minimum value of Fuel Economy column
min(cars$Fuel.Economy)
# get the maxium value of Fuel Economy column
max(cars$Fuel.Economy)
# get the average value of Fuel Economy column
mean(cars$Fuel.Economy)
# get the median value of Fuel Economy column
median(cars$Fuel.Economy)
# get the Quartiles
quantile(cars$Fuel.Economy)
# get the standard deviation
sd(cars$Fuel.Economy)
# get the total value
sum(cars$Fuel.Economy)
# get the correlation coefficient between Cylinders and Fuel Economy
cor(
x = cars$Cylinders,
y = cars$Fuel.Economy) # negative correlation, higher the cylinders the lower the mpg
# summarize the entire table
summary(cars)
# Creating Data Visualizations
# set the working directory
setwd("C:/Users/sseyl/OneDrive/Documents/GitHub/Data-Science-Projects/R_Projects") # use / instead of \ for directory
# read in a CSV data file
cars <- read.csv("Cars.csv")
# Creating Data Visualizations
# set the working directory
setwd("C:/Users/sseyl/OneDrive/Documents/GitHub/Data-Science-Projects/R_Projects") # use / instead of \ for directory
# read in a CSV data file
cars <- read.csv("Cars.csv")
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
